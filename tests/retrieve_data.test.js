const request = require("request");
const dotenv = require("dotenv");
const RetrieveData = require("../classes/retrieveData");
dotenv.config();
jest.mock("request");
const { AVANTAGE_KEY } = process.env;
const test_symbol = "IBM";
const test_company_info = {
  Symbol: "IBM",
  AssetType: "Common Stock",
  Name: "International Business Machines",
  Description:
    "International Business Machines Corporation (IBM) is an American multinational technology company headquartered in Armonk, New York, with operations in over 170 countries. The company began in 1911, founded in Endicott, New York, as the Computing-Tabulating-Recording Company (CTR) and was renamed International Business Machines in 1924. IBM is incorporated in New York. IBM produces and sells computer hardware, middleware and software, and provides hosting and consulting services in areas ranging from mainframe computers to nanotechnology. IBM is also a major research organization, holding the record for most annual U.S. patents generated by a business (as of 2020) for 28 consecutive years. Inventions by IBM include the automated teller machine (ATM), the floppy disk, the hard disk drive, the magnetic stripe card, the relational database, the SQL programming language, the UPC barcode, and dynamic random-access memory (DRAM). The IBM mainframe, exemplified by the System/360, was the dominant computing platform during the 1960s and 1970s.",
  CIK: "51143",
  Exchange: "NYSE",
  Currency: "USD",
  Country: "USA",
  Sector: "TECHNOLOGY",
  Industry: "COMPUTER & OFFICE EQUIPMENT",
  Address: "1 NEW ORCHARD ROAD, ARMONK, NY, US",
  FiscalYearEnd: "December",
  LatestQuarter: "2022-09-30",
  MarketCapitalization: "130764128000",
  EBITDA: "12010000000",
  PERatio: "23.96",
  PEGRatio: "1.276",
  BookValue: "22.2",
  DividendPerShare: "6.59",
  DividendYield: "0.0453",
  EPS: "6.09",
  RevenuePerShareTTM: "67.2",
  ProfitMargin: "0.0209",
  OperatingMarginTTM: "0.115",
  ReturnOnAssetsTTM: "0.0322",
  ReturnOnEquityTTM: "0.0648",
  RevenueTTM: "60535001000",
  GrossProfitTTM: "31486000000",
  DilutedEPSTTM: "6.09",
  QuarterlyEarningsGrowthYOY: "0.041",
  QuarterlyRevenueGrowthYOY: "0.065",
  AnalystTargetPrice: "142.43",
  TrailingPE: "23.96",
  ForwardPE: "15.55",
  PriceToSalesRatioTTM: "2.108",
  PriceToBookRatio: "6.75",
  EVToRevenue: "2.969",
  EVToEBITDA: "25.81",
  Beta: "0.881",
  "52WeekHigh": "153.21",
  "52WeekLow": "114.19",
  "50DayMovingAverage": "144.0",
  "200DayMovingAverage": "135.07",
  SharesOutstanding: "896320000",
  DividendDate: "2022-12-10",
  ExDividendDate: "2022-11-09",
};
const test_daily_info = {
  "Meta Data": {
    "1. Information": "Daily Time Series with Splits and Dividend Events",
    "2. Symbol": "IBM",
    "3. Last Refreshed": "2023-01-17",
    "4. Output Size": "Compact",
    "5. Time Zone": "US/Eastern",
  },
  "Time Series (Daily)": {
    "2023-01-17": {
      "1. open": "146.42",
      "2. high": "147.18",
      "3. low": "145.01",
      "4. close": "145.19",
      "5. adjusted close": "145.19",
      "6. volume": "2986461",
      "7. dividend amount": "0.0000",
      "8. split coefficient": "1.0",
    },
    "2023-01-13": {
      "1. open": "144.06",
      "2. high": "146.1",
      "3. low": "144.01",
      "4. close": "145.89",
      "5. adjusted close": "145.89",
      "6. volume": "2455786",
      "7. dividend amount": "0.0000",
      "8. split coefficient": "1.0",
    },
    "2023-01-12": {
      "1. open": "144.88",
      "2. high": "146.66",
      "3. low": "144.52",
      "4. close": "145.55",
      "5. adjusted close": "145.55",
      "6. volume": "2716118",
      "7. dividend amount": "0.0000",
      "8. split coefficient": "1.0",
    },
  },
};
const test_bollinger_band_info = {
  "Meta Data": {
    "1: Symbol": "IBM",
    "2: Indicator": "Bollinger Bands (BBANDS)",
    "3: Last Refreshed": "2023-01-17",
    "4: Interval": "weekly",
    "5: Time Period": 5,
    "6.1: Deviation multiplier for upper band": 3,
    "6.2: Deviation multiplier for lower band": 3,
    "6.3: MA Type": 0,
    "7: Series Type": "close",
    "8: Time Zone": "US/Eastern Time",
  },
  "Technical Analysis: BBANDS": {
    "2023-01-17": {
      "Real Upper Band": "149.2868",
      "Real Middle Band": "143.4640",
      "Real Lower Band": "137.6412",
    },
    "2023-01-13": {
      "Real Upper Band": "148.7097",
      "Real Middle Band": "142.4580",
      "Real Lower Band": "136.2063",
    },
    "2023-01-06": {
      "Real Upper Band": "150.1300",
      "Real Middle Band": "142.6900",
      "Real Lower Band": "135.2500",
    },
  },
};
const test_accumulation_dist_info = {
  "Meta Data": {
    "1: Symbol": "IBM",
    "2: Indicator": "Williams' %R (WILLR)",
    "3: Last Refreshed": "2023-01-17",
    "4: Interval": "daily",
    "5: Time Period": 10,
    "6: Time Zone": "US/Eastern Time",
  },
  "Technical Analysis: WILLR": {
    "2023-01-17": {
      WILLR: "-27.7545",
    },
    "2023-01-13": {
      WILLR: "-10.6796",
    },
    "2023-01-12": {
      WILLR: "-15.3953",
    },
  },
};
const test_rsi_info = {
  "Meta Data": {
    "1: Symbol": "IBM",
    "2: Indicator": "Stochastic Relative Strength Index (STOCHRSI)",
    "3: Last Refreshed": "2023-01-17",
    "4: Interval": "daily",
    "5: Time Period": 10,
    "6.1: FastK Period": 6,
    "6.2: FastD Period": 3,
    "6.3: FastD MA Type": 1,
    "7: Series Type": "close",
    "8: Time Zone": "US/Eastern Time",
  },
  "Technical Analysis: STOCHRSI": {
    "2023-01-17": {
      FastK: "49.1856",
      FastD: "74.2639",
    },
    "2023-01-13": {
      FastK: "100.0000",
      FastD: "99.3423",
    },
    "2023-01-12": {
      FastK: "100.0000",
      FastD: "98.6845",
    },
  },
};

describe("Gather Stock Data", () => {
  describe("Confirm Company Existence", () => {
    it("should return true if the user input matches a NYSE company's symbol", () => {
      const company = new RetrieveData("IBM");
      expect(company.checkInputType()).toBe(true);
      const url = company.generateAPI("INFO");
      expect(url).toEqual(
        `https://www.alphavantage.co/query?function=OVERVIEW&symbol=IBM&apikey=${AVANTAGE_KEY}`
      );
      // const data = company.retrieveCompanyInfo();
      // expect(data).toBe(true);
      // expect(data.info.Symbol).toEqual(test_symbol);
    });
    // it("should return false if the user input matches a NYSE company's symbol", () => {
    //   const bad_company = new RetrieveData(1972);
    //   expect(bad_company.checkInputType()).toBe(false);
    //   expect(bad_company.exists).toBe(false);
    // });
    // it("should return a NYSE company's basic public information", () => {
    //   const company = new RetrieveData(test_symbol);
    //   const { Name, Symbol, Sector, Industry, Address, Description } =
    //     test_company_info;
    //   expect(company.checkInputType()).toBe(true);
    //   company.retrieveCompanyInfo();
    //   expect(company.exists).toBe(true);
    //   expect(company.info).toEqual({
    //     Name,
    //     Symbol,
    //     Sector,
    //     Industry,
    //     Address,
    //     Description,
    //   });
    // });
  });

  // describe("Retrieve Adjusted Daily Information", () => {
  //   it("should return true if the meta data matches the correct format", () => {});
  //   it("should return false if meta data doesn't match the correct format", () => {});
  //   it("should return true if the stock data matches the correct format", () => {});
  //   it("should return false if stock data doesn't match the correct format", () => {});

  //   it("should return an empty object if the symbol doesn't exist", () => {});
  //   it("should not be called if the company doesn't exist", () => {});
  // });

  // describe("Retrieve Bollinger Band Information", () => {
  //   it("should return true if the meta data matches the correct format", () => {});
  //   it("should return false if meta data doesn't match the correct format", () => {});
  //   it("should return true if the stock data matches the correct format", () => {});
  //   it("should return false if stock data doesn't match the correct format", () => {});

  //   it("should return an empty object if the symbol doesn't exist", () => {});
  //   it("should not be called if the company doesn't exist", () => {});
  //   it("should not be called if the request to retrieve daily adjusted rate information failed", () => {});
  // });

  // describe("Retrieve Accumulation and Distribution Information", () => {
  //   it("should return true if the meta data matches the correct format", () => {});
  //   it("should return false if meta data doesn't match the correct format", () => {});
  //   it("should return true if the stock data matches the correct format", () => {});
  //   it("should return false if stock data doesn't match the correct format", () => {});

  //   it("should return an empty object if the symbol doesn't exist", () => {});
  //   it("should not be called if the company doesn't exist", () => {});
  //   it("should not be called if the request to retrieve daily adjusted rate information failed", () => {});
  //   it("should not be called if the request to retrieve bollinger band information failed", () => {});
  // });

  // describe("Retrieve Relative Strength Index Information", () => {
  //   it("should return true if the meta data matches the correct format", () => {});
  //   it("should return false if meta data doesn't match the correct format", () => {});
  //   it("should return true if the stock data matches the correct format", () => {});
  //   it("should return false if stock data doesn't match the correct format", () => {});

  //   it("should return an empty object if the symbol doesn't exist", () => {});
  //   it("should not be called if the company doesn't exist", () => {});
  //   it("should not be called if the request to retrieve daily adjusted rate information failed", () => {});
  //   it("should not be called if the request to retrieve bollinger band information failed", () => {});
  //   it("should not be called if the request to retrieve accumulation and distribution information failed", () => {});
  // });
});
